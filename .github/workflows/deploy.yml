name: Deploy to AWS

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  ECR_FRONTEND_REPOSITORY: citation-network-frontend
  ECR_BACKEND_REPOSITORY: citation-network-backend

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3  # Updated to v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2  # Updated to v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        # Debug: Print some info (redacted for security)
        echo "Deploying to host: ${EC2_HOST}"
        echo "Using ECR registry: ${ECR_REGISTRY}"
        
        # Write the SSH key to a file
        mkdir -p ~/.ssh
        echo "$PRIVATE_KEY" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        
        # Add host key verification
        ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts
        
        # Try a simple SSH command first to test connection
        echo "Testing SSH connection..."
        ssh -i ~/.ssh/deploy_key -v ec2-user@$EC2_HOST 'echo "SSH connection successful"'
        
        # If SSH test succeeds, proceed with deployment
        echo "Creating deploy script..."
        cat << EOF > deploy.sh
        #!/bin/bash
        set -e
        echo "Starting deployment on EC2..."
        
        # Export AWS credentials for ECR login
        export AWS_ACCESS_KEY_ID='${{ secrets.AWS_ACCESS_KEY_ID }}'
        export AWS_SECRET_ACCESS_KEY='${{ secrets.AWS_SECRET_ACCESS_KEY }}'
        export AWS_DEFAULT_REGION='${AWS_REGION}'
        
        # Test AWS credentials
        echo "Testing AWS credentials..."
        aws sts get-caller-identity
        
        # Test Docker
        echo "Testing Docker..."
        sudo docker ps
        
        # Test ECR login
        echo "Testing ECR login..."
        aws ecr get-login-password --region ${AWS_REGION} | sudo docker login --username AWS --password-stdin ${ECR_REGISTRY}
        
        echo "Deployment script completed successfully"
        EOF
        
        # Copy and execute deploy script
        echo "Copying deploy script to EC2..."
        scp -i ~/.ssh/deploy_key -v deploy.sh ec2-user@$EC2_HOST:/home/ec2-user/
        
        echo "Executing deploy script..."
        ssh -i ~/.ssh/deploy_key -v ec2-user@$EC2_HOST 'chmod +x /home/ec2-user/deploy.sh && /home/ec2-user/deploy.sh'
          
    - name: Verify Deployment
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
      run: |
        # Wait for services to be up
        sleep 30
        
        # Check if services are responding
        curl -f http://$EC2_HOST:80 || exit 1
        curl -f http://$EC2_HOST:8000/health || exit 1

    - name: Cleanup
      if: always()
      run: rm -f ~/.ssh/deploy_key