name: Deploy to AWS

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  ECR_FRONTEND_REPOSITORY: citation-network-frontend
  ECR_BACKEND_REPOSITORY: citation-network-backend
  ECS_CLUSTER: citation-network-cluster
  ECS_SERVICE: citation-network-service

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build and push Docker images
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        # Build and push frontend
        docker build -t $ECR_REGISTRY/$ECR_FRONTEND_REPOSITORY:$GITHUB_SHA -f docker/frontend.Dockerfile .
        docker build -t $ECR_REGISTRY/$ECR_FRONTEND_REPOSITORY:latest -f docker/frontend.Dockerfile .
        docker push $ECR_REGISTRY/$ECR_FRONTEND_REPOSITORY:$GITHUB_SHA
        docker push $ECR_REGISTRY/$ECR_FRONTEND_REPOSITORY:latest
        
        # Build and push backend
        docker build -t $ECR_REGISTRY/$ECR_BACKEND_REPOSITORY:$GITHUB_SHA -f docker/backend.Dockerfile .
        docker build -t $ECR_REGISTRY/$ECR_BACKEND_REPOSITORY:latest -f docker/backend.Dockerfile .
        docker push $ECR_REGISTRY/$ECR_BACKEND_REPOSITORY:$GITHUB_SHA
        docker push $ECR_REGISTRY/$ECR_BACKEND_REPOSITORY:latest
    
    - name: Update ECS service
      run: |
        aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment